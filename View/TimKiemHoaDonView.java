/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codeptit.quanlycuahangmaytinh.View;

import codeptit.quanlycuahangmaytinh.Model.HoaDon;
import codeptit.quanlycuahangmaytinh.Model.TaiKhoan;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class TimKiemHoaDonView extends javax.swing.JFrame {

    /**
     * Creates new form TimKiemHoaDonView
     */
    public TimKiemHoaDonView() {
        initComponents();
        showHD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_MaHD = new javax.swing.JTextField();
        jTextField_Thang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Nam = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_MaTK = new javax.swing.JTextField();
        jTextField_MaKH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_HD = new javax.swing.JTable();
        jButton_TimKiem = new javax.swing.JButton();
        jButton_Exit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton_LamMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Tìm Kiếm Hóa Đơn");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 204));
        jLabel2.setText("Mã hóa đơn:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 204));
        jLabel3.setText("Tháng:");

        jTextField_MaHD.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jTextField_Thang.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 204));
        jLabel4.setText("Năm:");

        jTextField_Nam.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 204));
        jLabel5.setText("Mã tài khoản:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 204));
        jLabel6.setText("Mã khách hàng:");

        jTextField_MaTK.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jTextField_MaKH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jTable_HD = new JTable() {
            public boolean isCellEditable(int row, int column) {
                for(int i = 0; i < jTable_HD.getRowCount(); i++) {
                    if(row == i) return false;
                }
                return true;
            }
        };
        jTable_HD.setBackground(new java.awt.Color(255, 153, 255));
        jTable_HD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã hóa đơn", "Mã tài khoản", "Mã khách hàng", "Ngày bán", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable_HD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_HDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_HD);
        if (jTable_HD.getColumnModel().getColumnCount() > 0) {
            jTable_HD.getColumnModel().getColumn(0).setMinWidth(40);
            jTable_HD.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_HD.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        jButton_TimKiem.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton_TimKiem.setIcon(new javax.swing.ImageIcon("D:\\Dai Hoc\\LapTrinhHuongDoiTuong\\QuanLyCuaHangMayTinh\\icon\\Zoom-icon.png")); // NOI18N
        jButton_TimKiem.setText("Tìm Kiếm");
        jButton_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TimKiemActionPerformed(evt);
            }
        });

        jButton_Exit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton_Exit.setIcon(new javax.swing.ImageIcon("D:\\Dai Hoc\\LapTrinhHuongDoiTuong\\QuanLyCuaHangMayTinh\\icon\\Button-Close-icon.png")); // NOI18N
        jButton_Exit.setText("Thoát");
        jButton_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ExitActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Nhấp đúp vào hóa đơn để hiển thị thông tin chi tiết!");

        jButton_LamMoi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton_LamMoi.setIcon(new javax.swing.ImageIcon("D:\\Dai Hoc\\LapTrinhHuongDoiTuong\\QuanLyCuaHangMayTinh\\icon\\Reload-icon.png")); // NOI18N
        jButton_LamMoi.setText("Làm Mới");
        jButton_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(11, 11, 11)
                        .addComponent(jTextField_Nam))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_MaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(166, 166, 166))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jButton_TimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_LamMoi)
                .addGap(103, 103, 103)
                .addComponent(jButton_Exit)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_MaTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_TimKiem)
                    .addComponent(jButton_Exit)
                    .addComponent(jButton_LamMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton_ExitActionPerformed

    private void jTable_HDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_HDMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable_HD.getModel();
        int selectedRow = jTable_HD.getSelectedRow();
        if(evt.getClickCount() < 2) {
            jTextField_MaHD.setText(dtm.getValueAt(selectedRow, 1).toString());
            jTextField_MaTK.setText(dtm.getValueAt(selectedRow, 2).toString());
            jTextField_MaKH.setText(dtm.getValueAt(selectedRow, 3).toString());
            String[] temp = dtm.getValueAt(selectedRow, 4).toString().split("/");
            jTextField_Thang.setText(temp[1]);
            jTextField_Nam.setText(temp[2]);
        } else {
            ChiTietHoaDonView cthdv = new ChiTietHoaDonView(dtm.getValueAt(selectedRow, 1).toString());
            cthdv.setLocationRelativeTo(null);
            cthdv.setVisible(true);
        }
    }//GEN-LAST:event_jTable_HDMouseClicked

    private void jButton_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TimKiemActionPerformed
        // TODO add your handling code here:
        // Xoa table
        DefaultTableModel dtm = (DefaultTableModel) jTable_HD.getModel();
        while(jTable_HD.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        
        String maHD = jTextField_MaHD.getText();
        String maTK = jTextField_MaTK.getText();
        String maKH = jTextField_MaKH.getText();
        String thang = jTextField_Thang.getText();
        String nam = jTextField_Nam.getText();
        
        if(maHD.equals("") && maTK.equals("") && maKH.equals("") && thang.equals("") && nam.equals("")) {
            JOptionPane.showMessageDialog(null, "Hãy nhập một điều kiện tìm kiếm!!!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else {
            List<HoaDon> list = new ArrayList<>();
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;DatabaseName=DBComputerStore;user=sa;password=123456;encrypt=true;trustServerCertificate=true";
                Connection con = DriverManager.getConnection(connectionUrl);
                String sql = "SELECT * FROM tblHDban WHERE 1 = 1";
                if(!maHD.equals("")) {
                    sql = sql + " AND MaHD LIKE '%" + maHD +"%'";
                }
                if(!maTK.equals("")) {
                    sql = sql + " AND MaTK LIKE '%" + maTK +"%'";
                }
                if(!maKH.equals("")) {
                    sql = sql + " AND MaKH LIKE '%" + maKH +"%'";
                }
                if (!thang.equals("")) {
                    sql = sql + " AND MONTH(NgayBan) =" + thang;
                }
                if(!nam.equals("")) {
                    sql = sql + " AND YEAR(NgayBan) =" + nam;
                }
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                HoaDon hd;
                while(rs.next()) {
                    hd = new HoaDon(rs.getString(1), rs.getString(2), rs.getString(3), rs.getDate(4), rs.getLong(5));
                    list.add(hd);
                } 
                pst.close();
                con.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            
            if(list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không có hóa đơn thỏa mãn điều kiện!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            } else {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                Object[] os = new Object[6];
                for (int i = 0; i < list.size(); i++) {
                    HoaDon get = list.get(i);
                    os[0] = i+1;
                    os[1] = get.getMaHD();
                    os[2] = get.getMaTK();
                    os[3] = get.getMaKH();
                    os[4] = sdf.format(get.getNgayBan());
                    os[5] = get.getTongTien();
                    dtm.addRow(os);
                }
            }
        }
    }//GEN-LAST:event_jButton_TimKiemActionPerformed

    private void jButton_LamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LamMoiActionPerformed
        // TODO add your handling code here:
        showHD();
        
        //Xoa text
        jTextField_MaHD.setText("");
        jTextField_MaTK.setText("");
        jTextField_MaKH.setText("");
        jTextField_Thang.setText("");
        jTextField_Nam.setText("");
    }//GEN-LAST:event_jButton_LamMoiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Exit;
    private javax.swing.JButton jButton_LamMoi;
    private javax.swing.JButton jButton_TimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_HD;
    private javax.swing.JTextField jTextField_MaHD;
    private javax.swing.JTextField jTextField_MaKH;
    private javax.swing.JTextField jTextField_MaTK;
    private javax.swing.JTextField jTextField_Nam;
    private javax.swing.JTextField jTextField_Thang;
    // End of variables declaration//GEN-END:variables

    private void showHD() {
        DefaultTableModel dtm = (DefaultTableModel) jTable_HD.getModel();
        while (dtm.getRowCount() > 0) {            
            dtm.removeRow(dtm.getRowCount()-1);
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        List<HoaDon> list = HoaDon.hoaDonList();
        Object[] os = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            HoaDon get = list.get(i);
            os[0] = i+1;
            os[1] = get.getMaHD();
            os[2] = get.getMaTK();
            os[3] = get.getMaKH();
            os[4] = sdf.format(get.getNgayBan());
            os[5] = get.getTongTien();
            dtm.addRow(os);
        }
    }
}
